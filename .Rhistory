Q
source("linear.multishrinkage_setup.R")
9
ls()
a
b
Q
source("linear.multishrinkage_setup.R")
0
K
K
K
diag.K
exp(diag.K)
source("linear.multishrinkage_setup.R")
9
ls()
a
Q
iIter
iPar
source("linear.multishrinkage_setup.R")
9
a
Q
source("linear.multishrinkage_setup.R")
0
exp(matrix(142, -144, 9))
0
exp(matrix(c(142, -144, 9)))
source("linear.multishrinkage_setup.R")
0
OUT.accept.probs[["xi"]][1]
OUT.accept.probs[["xi"]][2]
OUT.accept.probs[["xi"]][3]
OUT.accept.probs[["xi"]][4]
OUT.accept.probs[["xi"]][5]
source("linear.multishrinkage_setup.R")
0
source("linear.multishrinkage_setup.R")
0
source("linear.multishrinkage_setup.R")
0
diag.K.mu0
diag.K.Sigma
diag.K.Sigma0
source("linear.multishrinkage_setup.R")
0
source("linear.multishrinkage_setup.R")
 = 
0
source("linear.multishrinkage_setup.R")
ls()
diag.K
diag.K.orig
gradObsTras
0
diag.K.orig
deriv_link(diag.K.orig, link = Params_Transform[["diag.K"]])
gradObs.margi0
deriv_prior(diag.K, priorArgs = list(mean =
                                                   priorArgs$diag.K.mu0, covariance =
                                          priorArgs$diag.K.Sigma0, shrinkage = priorArgs$diag.K.c
                                          , prior_type =
                                          priorArgs$prior_type[["diag.K"]]))
0
0
source("linear.multishrinkage_setup.R")
n0
S0
n0*S0
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
k
k0
k0
seq(1, 36, length.out = 9)
seq(1, 36, length.out = 8)
seq(1, 36, length.out = 10)
seq(1, 36, length.out = 12)
seq(1, 36, length.out = 13)
seq(1, 36, length.out = 8)
seq(1, 36, by =  4)
D1
D2
D1
D2
D3
D4
Y
lm(Y~0+D1+D2+D3+D4+X2+X3)
summary(lm(Y~0+D1+D2+D3+D4+X2+X3))
summary(lm(Y~D1+D2+D3+D4+X2+X3))
summary(lm(Y~0+D1+D2+D3+D4+X2+X3))
lm(Y~0+D1+D2+D3+D4+X2+X3)
lm(Y~0+D1+D2+D3+D4+X2+X3)
getwd()
summary(lm(Y~0+D1+D2+D3+D4+X2+X3))
source("linear.multishrinkage_setup.R")
OUT.Params[["diag.K"]]
exp(OUT.Params[["diag.K"]])
exp(OUT.Params[["diag.K"]])
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
ls()
callParam
Params
HessObs.cur.prop
param.cur
Q
source("linear.multishrinkage_setup.R")
n
param.cur
Parmas
Params
n
caller
caller
n
gradhess
invHessObs
invHessObs.cur
Q
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")

D1 <- D2 <- D3 <- D4<- rep(0, 36)

D1[seq(1, 36, by =  4)] <- 1
D2[seq(2, 36, by =  4)] <- 1
D3[seq(3, 36, by =  4)] <- 1
D4[seq(4, 36, by =  4)] <- 1

X2 <- rnorm(36)
X3 <- rnorm(36)

Y <- 4 + D2 + 9*D3 - D4 -7*X2 + X3

lm(Y~0+D1+D2+D3+D4+X2+X3)
diag(1:5)
diag(1:5)^(-1/2)
diag(1:5)^(-1/2)
q
q
q
q()
source("linear.singleshrinkage_setup.R")
n
length(crossvalid.struc[["test"]][nCross])
nCross
crossvalid.struc[["test"]]
crossvalid.struc[["test"]][3]
crossvalid.struc[["test"]][[3]]
Q
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
n
print(n)
nCross
length(crossvalid.struc[["test"]][[nCross]])
nFold
n
nFold
length(crossvalid.struc[["test"]][[nCross]]) + length(crossvalid.struc[["pred"]][[nCross]])
nFold
nFold
source("linear.singleshrinkage_setup.R")
ls()
nCross
nFold
traceback()
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
ls()
Params
ls()
Sigma
ka
B
Params
Q
source("linear.singleshrinkage_setup.R")
tr
source("linear.singleshrinkage_setup.R")
ls()
n
PredMatrix
PredMatrix
ls()
iCross
iTest
iTest
iPred
Y.pred
Y.iPred
x.iPred
x.iPred
Y.iTest
Y.iTest
x.iTest
Params.j
j
(num.burn.in + 1)
nIter
Params.j
Params.j
source("linear.singleshrinkage_setup.R")
n
ls()
Params.j
source("linear.singleshrinkage_setup.R")
n
eval(caller.log.like)
call(logpost.fun.name, Y = Y.iTest, x = x.iTest, 
    Params = Params.j, callParam = list(id = c("xi", "B", "ka", 
        "Sigma")), priorArgs = priorArgs, splineArgs = splineArgs, 
    Params_Transform = Params_Transform)
eval(call(logpost.fun.name, Y = Y.iTest, x = x.iTest, 
eval( call(logpost.fun.name,Y = Y.iTest, x = x.iTest, Params =
                                      Params.j, callParam = list(id = c("xi", "B", "ka", "Sigma")) ,
                                      priorArgs = priorArgs, splineArgs = splineArgs,
                                      Params_Transform = Params_Transform))
)
)
traceback()
Q
source("linear.singleshrinkage_setup.R")
ls()
B
B.orig
ka
Ka.orig
Params
Sigma.orig
xi.orig
ls()
Params.j
where
Q
traceback()
close.all()
source("linear.singleshrinkage_setup.R")
ls()
j
priorArgs
Params.j
iTest
iPred
Y.iTest
Y.iPred
x.iTest
x.iPred
q
p
Y
X
X
where
n
ls()
where
n
ls()
B
ka
xi
X
P
M
P %*% M
ka
ka*P %*% M
Q
lapply(OUT.Params, function(x) apply(x[, , j, iCross, drop =
                                                                 FALSE], c(1, 2), "[")) 
FALSE], c(1, 2), "[")) 
lapply(OUT.Params, function(x) apply(x[, , 1, iCross, drop = FALSE], c(1, 2), "[")) 
lapply(OUT.Params, function(x) apply(x[, , 1, iCross], c(1, 2), "[")) 
source("linear.singleshrinkage_setup.R")
Q
source("linear.singleshrinkage_setup.R")
traceback()
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
OUT.LPDS
OUT.LPDS
OUT.LPDS$PredMatrix
a  =  OUT.LPDS$PredMatrix
a
a[, 1]
exp(a[, 1])
mean(exp(a[, 1]))
log(mean(exp(a[, 1])))
exp(a)
sum(exp(a))
colSum(exp(a))
colSums(exp(a))
log(colSums(exp(a)))
mean(log(colSums(exp(a))))
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
OUT.LPDS
OUT.LPDS$LPDS
close.all()
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
OUT.Params
names(OUT.Params)
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
a  = list()
ulist(A)
unlist(A)
unlist(a)
sum(unlist(a))
sum(NULL)
a  = list(a  = NULL,  b = 3, c = 4)
unlist(a)
sum(unlist(a))
a  = list(a  = NA,  b = 3, c = 4)
a
unlist(A)
unlist(a)
sum(unlist(a))
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
traceback()
ls()
n
beta
beta.tilde
Norm.Sigma
dmvnorm(x = beta, mean = beta.tilde, sigma = Norm.Sigma, 
    log = TRUE)
beta
dmvnorm(x = beta, mean = beta.tilde, sigma = Norm.Sigma)
dmvnorm(x = as.vector(beta), mean = beta.tilde, sigma = Norm.Sigma)
beta.tilde
Q
traceback()
source("linear.singleshrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
traceback()
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS$LPDS
OUT.LPDS
OUT.LPDS
a  =  OUT.LPDS
a
mean(log(colSums(exp(a))))    
a
mean(log(colSums(exp(a))))    
a  =  OUT.LPDS$PredMatrix
a
mean(log(colSums(exp(a))))    
log(colSums(exp(a))))
log(colSums(exp(a)))
colSums(exp(a))
colSums(exp(a))
a
mean(a)
median(a)
max(a)
c  = 100
colSums(exp(a-c))
colSums(exp(a-200))
colSums(exp(a-500))
colSums(exp(a-500))
colSums(exp(a-500)) 
colMeans(exp(a))
colMeans(exp(a-100))
colMeans(exp(a-300))
a
mean(a)
apply(a, a)
apply(a, mean)
apply(a, 2, mean)
apply(a, 1, mean)
apply(a, 2, mean)
c  = apply(a, 2, mean)
a -c
c  = matirx(apply(a, 2, mean), 80, 2, byrow = T)
c  = matrix(apply(a, 2, mean), 80, 2, byrow = T)
c
a-c
exp(a-c)
colMeans(exp(a-c))
log(colMeans(exp(a-c)))
mean(log(colMeans(exp(a-c))))
apply(a, 2, mean)
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS$PredMatrix
a  =  OUT.LPDS$PredMatrix
a0 = OUT.LPDS$LPDS
a0
log(colMeans(exp(a)))
mean(log(colMeans(exp(a))))
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
a0 = OUT.LPDS$LPDS
a  =  OUT.LPDS$PredMatrix
a
mean(log(colMeans(exp(a))))
a0
n
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
OUT.LPDS$PredMatrix
colMeans(OUT.LPDS$PredMatrix)
OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
traceback()
OUT.LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
traceback()
OUT.Params
xi
ka
K
diag.K
Sigma
vech.Sigma
vech.Sigma
B
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
diag.K
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.multishrinkage_setup.R");OUT.LPDS$LPDS
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
Rprof()
source("linear.singleshrinkage_setup.R");Rprof(NULL);summaryRprof()
rgl.postscript("persp3db.pdf","pdf")
rgl.pop()

rgl.postscript("persp3db.pdf","pdf")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
source("linear.multishrinkage_setup.R")
OUT.LPDS
PredMatrix <- OUT.LPDS$PredMatrix
scaleFactors <- apply(PredMatrix, 2, mean)
scaleFactors
scaleMatrix <- matrix(scaleFactors, 800, 5)
scaleMatrix
mean(scaleFactors + log(colMeans(exp(PredMatrix-scaleMatrix))))  
colMeans(exp(PredMatrix-scaleMatrix))  
scaleFactors
plot(PredMatrix)
plot(PredMatrix[, 2])
scaleFactors <- apply(PredMatrix, 2, max)
scaleMatrix <- matrix(scaleFactors, 800, 5)
mean(scaleFactors + log(colMeans(exp(PredMatrix-scaleMatrix))))    
colMeans(exp(PredMatrix-scaleMatrix)))
colMeans(exp(PredMatrix-scaleMatrix))
colMeans(exp(PredMatrix[, 2]-scaleMatrix[, 2]))
exp(PredMatrix[, 2]-scaleMatrix[, 2])
mean
a
which(PredMatrix, NA)
which(PredMatrix, max)
which(PredMatrix =  = Inf)
which(PredMatrix == Inf)
PredMatrix == Inf
is.infinite(PredMatrix)
which(is.infinite(PredMatrix))
PredMatrix
exp(PredMatrix)
plot(PredMatrix[, 2])
exp((PredMatrix[, 2])
)
exp((PredMatrix[, 2]))
exp(PredMatrix[, 2])
PredMatrix[, 2]
PredMatrix[,1]
dim(PredMatrix)
PredMatrix[, 2]
dim(PredMatrix[, 2]
)
dim(PredMatrix[, 2])
PredMatrix[, 2]
exp(PredMatrix[, 2])
exp(PredMatrix[, 2]-3000)
log(exp(PredMatrix[, 2]-3000))
c  = PredMatrix[, 2]
ma(c)
max(c)
max(c) - min(c)
aa  = (max(c) - min(c))/2
aa
exp(PredMatrix[, 2]-aa)
mean(exp(PredMatrix[, 2]-aa))
PrexMatirx
PrexMatrix
PredMatrix
      scaleFactors <- apply(PredMatrix, 2, function(x) median)
      scaleMatrix <- matrix(scaleFactors, 800, 5)
      expPredMatrix <- exp(PredMatrix-scaleMatrix)
      expPredMatrix[is.infinite(expPredMatrix)] <- NA
      LPDS <- mean(scaleFactors + log(colMeans(expPredMatrix, na.rm = TRUE)))   

      scaleFactors <- apply(PredMatrix, 2, median)
      scaleMatrix <- matrix(scaleFactors, 800, 5)
      expPredMatrix <- exp(PredMatrix-scaleMatrix)
      expPredMatrix[is.infinite(expPredMatrix)] <- NA
      LPDS <- mean(scaleFactors + log(colMeans(expPredMatrix, na.rm = TRUE)))   

LPDS
expPredMatrix
source("linear.multishrinkage_setup.R")
traceback()
OUT.Params[["vech.Simga"]]
OUT.Params
names(OUT.Params)
OUT.Params[["vech.Sigma"]]
LPDS
OUT.LPDS
close.all()
source("linear.multishrinkage_setup.R")
OUT.LPDS <- LogPredScore(Y = Y, x = x, logpost.fun.name = logpost.fun.name, crossvaid.struc =
                 crossvaid.struc, splineArgs = splineArgs, priorArgs = priorArgs,
                 OUT.Params = OUT.Params, Params_Transform = Params_Transform,
                         Params2Updated = Params2Updated, burn.in = burn.in)
cat("LPDS:", OUT.LPDS$LPDS, "\n\n")
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
close.all()
close.all
source("linear.singleshrinkage_setup.R")
close.all()
traceback()
source("linear.singleshrinkage_setup.R")
traceback()
source("linear.singleshrinkage_setup.R")
traceback()
source("linear.singleshrinkage_setup.R")
traceback()
source("linear.singleshrinkage_setup.R")
n
source("linear.singleshrinkage_setup.R")
n
Q
source("linear.singleshrinkage_setup.R")
gradObs
n
q
Q
source("linear.singleshrinkage_setup.R")
gradObs
grad.num.xi
xi
x
x
Y
Q
source("linear.singleshrinkage_setup.R")
x
source("linear.singleshrinkage_setup.R")
grad.num.xi
gradObs
Q
close.all()
source("linear.singleshrinkage_setup.R")
gradObs.num
gradObs
grad.num.ka
grad.num.xi
Q
source("linear.singleshrinkage_setup.R")
grad.num.xi
gradObs
Q
source("linear.singleshrinkage_setup.R")
grad.num.xi
gradObs
plot(grad.num.xi$g, gradObs)
source("linear.singleshrinkage_setup.R")
plot(grad.num.xi$g, gradObs)
xi
xi2
gradObs
grad.num.xi
Q
source("linear.singleshrinkage_setup.R")
grad.num.xi
gradObs
grad.margi
gradObs.margi
gradObs.pri
gradHessObs.pri
ls()
gradObs.pri.part
Q
source("linear.singleshrinkage_setup.R")
source("linear.singleshrinkage_setup.R")
gradObs
grad.num.ka
Q
source("linear.singleshrinkage_setup.R")
grad.num.ka
grad.num.xi
gradObs
iSub
Q
source("linear.singleshrinkage_setup.R")
gradObs
grad.num.xi
Q
iSub
source("linear.singleshrinkage_setup.R")
grad.num.xi
grad.num.xi
gradObs
plot(grad.num.xi$g, gradObs)
Q
source("Projects/Rajan_single_test.R")
gradObs
grad.num.xi
plot(gradObs, grad.num.xi$g)
Q
source("Projects/Rajan_single_test.R")
plot(gradObs, grad.num.xi$g)
gradObs
gra.num.xi
grad.num.xi
logpost.fun.name
Q
source("Projects/Rajan.R")
logpost.fun.name
iSub
iPar
gradObs
grad.num.xi
 grad.num
Q
source("Projects/Rajan.R")
grad.num.xi
gradObs
iSub
xi
Q
source("Projects/Rajan.R")
iSub
xi
gradObs
cbind(gradObs, grad.num.xi)
cbind(gradObs, grad.num.xi$g)
plot(gradObs, grad.num.xi$g)
Q
source("Projects/Rajan.R")
source("Projects/Rajan.R")
cbind(gradObs, grad.num.K$g)
Q
source("Projects/Rajan_single_test.R")
cbind(gradObs, grad.num.xi$g)
xi
Q
source("Projects/Rajan_single_test.R")
cbind(gradObs, grad.num.xi$g)
Q
source("Projects/Rajan_single_test.R")
cbind(gradObs, grad.num.xi$g)
gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
gradObs/grad.num.xi$g
cbind(gradObs, grad.num.xi$g)
gradObs/grad.num.xi$g
Q
source("Projects/Rajan.R")
gradObs
grad.num.K
Q
source("Projects/Rajan.R")
gradObs
gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
gradObs/grad.num.xi$g
xi
x
y
Y
gradObs/grad.num.xi$g
gradObs
 gradObs/grad.num.xi$g
 cbind(gradObs, grad.num.xi$g)
Q
source("Projects/Rajan.R")
 gradObs/grad.num.xi$g
gradObs
gradObs
grad.num.xi
Q
source("Projects/Rajan.R")
grad.num.xi
gradObs
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
iSub
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
Y
x
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
xi
source("linear.multishrinkage_setup.R")
source("linear.multishrinkage_setup.R")
x
xi
xi.desi
data.source
source("linear.multishrinkage_setup.R")
x
xi
Y
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.multishrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
Q
source("linear.singleshrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
 gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
 gradObs/grad.num.xi$g
 gradObs
Q
source("linear.singleshrinkage_setup.R")
 gradObs
Q
library("fields")
source("linear.singleshrinkage_setup.R")
 gradObs
 gradObs/grad.num.xi$g
gradObs
grad.num.xi
Q
detach("package:fields")
source("linear.singleshrinkage_setup.R")
gradObs
grad.num.xi
ka
Q
source("Projects/Rajan_single_test.R.R")
source("Projects/Rajan_single_test.R")
grad.num.xi
 gradObs/grad.num.xi$g
xi
x
Y
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
 gradObs/grad.num.xi$g
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
xi
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
a
gradObs
grad.num.xi
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
Q
 gradObs/grad.num.xi$g
source("Projects/Rajan_single_test.R")
 gradObs/grad.num.xi$g
xi
gradObs
grad.num.xi
Q
source("Projects/Rajan_single_test.R")
grad.num.xi
gradObs
Q
source("Projects/Rajan_single_test.R")
grad.num.xi
gradObs
Q
source("linear.singleshrinkage_setup.R")
gradObs
grad.num.xi
gradObs/grad.num.xi
gradObs/grad.num.xi$g
xi
xi
x
Y
Q
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
Q
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
Q
gradObs/grad.num.xi$g
source("linear.singleshrinkage_setup.R")
gradObs/grad.num.xi$g
plot(gradObs/grad.num.xi$g)
Q
source("Projects/Rajan_single_test.R")
plot(gradObs/grad.num.xi$g)
gradObs/grad.num.xi$g
plot(gradObs/grad.num.xi$g)
Q
x
Y
source("Projects/Rajan_single_test.R")
plot(gradObs/grad.num.xi$g)
gradObs/grad.num.xi$g
Q
sourceDir
sourceDir(c("stable/", "utils/"))
sourceDir(c("stable/", "utils/"), recursive=T)
K
K.X
a  =  matrix(rnorm(16), 1)
a
a  =  matrix(rnorm(16), , 1)
a
K.X(4, 4, )
K.X(4, 4, a, T)
K.X(4, 4, t(a), T)
a  =  t(a)
a
K.X(4, 4, t(a), T)
K.X(4, 4, a, T)
a
q()
q()
ls()
bfgsi
csolve
csolve
ls
q()
