sourceDir("utils", T)
sourceDir("../../utils", T)
K(3, 3)
K(3, 3)
K(3, 3)
K(3, 3)
K(3, 3)
K(3, 3)
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
q <- 100
q <- 100
200*200
a = matrix(1, 200*200, 1)
print(object.size(a), unit = "mb")
print(object.size(a), unit = "Mb")
system.time(matrix(100))
system.time(matrix(1000))
system.time(matrix(0, 1000))
system.time(matrix(0, 1000, 1))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(matrix(0, 1000, 1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
system.time(diag(1000))
delta.K
delta.K
delta.K(diag(10), -1/2)
delta.K(diag(10), -1/2)
delta.K(1:10, -1/2)
sourceDir("../../utils", T)
K(3, 3)
n
p
p
q_i
n
n
sourceDir("../../utils", T)
n
n
delta.K
n
delta.K2
n
n
n
n
n
delta.K2
(diag(p) %x% K(q_i, p)
)
(diag(p) %x% K(q_i, p) %x% diag(q_i))
 K(q_i, p) %x% diag(q_i)
getwd()
a = 5
print(object.size(a))
print(object.size(a), units = "Mb")
print(object.size(a), units = c("Mb", "bt"))
print(object.size(a), units = c("Mb"))
print(object.size(a))
size
print(object.size(a))
a = print(object.size(a))
a
a
class(a)
a[1]
names(A)
names(a)
a[2]
a[1]
a = print(object.size(a), units = "Mb")
a
a
a
class(A)
size(A)
sourceDir("utils", T)
ls()
getwd()
a <- matrix(1:9, 3)
a
b = matrix(0, 3, 3)
b
b[2] = 2
a %*% b
b
a
a <- matrix(1, 10*100^2, 10)
b <- matrix(1, 10, 10)
system.time(a%*%b)
system.time(a%*%b)
a <- matrix(1, 2*100^2, 2)
b <- matrix(1, 2, 2)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(a%*%b)
system.time(replicat(a%*%b, 10))
system.time(replicate(a%*%b, 10))
system.time(replicate(a%*%b, 10))
system.time(replicate(a%*%b, 10))
system.time(replicate(a%*%b, 100))
system.time(replicate(a%*%b, 1000))
a <- matrix(1, 10^2*100^2, 10)
b <- a
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(a*b)
system.time(replicate(a*b,n = 100))
system.time(replicate(a*b,n = 10))
system.time(replicate(a*b,n = 10))
system.time(replicate(a*b,n = 10))
gc()
a <- matrix(1, 10^2*100^2, 10)
print(objct.size(a), units = "Mb")
print(objcts.size(a), units = "Mb")
print(objects.size(a), units = "Mb")
print(object.size(a), units = "Mb")
ls()
sourceDir("utils")
sourceDir("utils", T)
Sys.time(
)
Sys.time
Sys.time()
sys.time()
proc.time()
proc.time
ls()
close.all.R
close.all
seq(1:4)
seq(1:4)
matrix
 .Internal
rep(1:4, 4)
rep(1:4, 4)
seq
rep(1:4, 4)
rep(1:4, 4)*(4^2*(1:4))
rep(1:4, 4)*(4^2*rep((1:4), 4))
rep(1:4, 4)
seq(1, 4^3, 2)
seq(1, 4^3, 4^2)
seq(1, 4^3, 4^2)
seq(0, 4^3, 4^2)
seq(0, 4^3, 4^2, each = 4)
seq(0, 4^3, 4^2)
seq(seq(0, 4^3, 4^2), 16)
seq(seq(0, 4^3, 4^2), each = 4)
rep(seq(0, 4^3, 4^2), each = 4)
rpe(1:4, 4)rep(seq(0, 4^3, 4^2), each = 4)
rpe(1:4, 4)*rep(seq(0, 4^3, 4^2), each = 4)
rep(1:4, 4)*rep(seq(0, 4^3, 4^2), each = 4)
rep(1:4, 4)*rep(seq(0, 4^3, 4^2), each = 4)
seq(from = c(1, 5, 10), to = c(3, 7, 12))
seq(from = c(1, 5, 10), to = c(3, 7, 12), )
)
a <- matrix(0, 4, 16)
a
b <- matrix(1:16, 4)
b
a[, c(1, 6, 11, 16)] <- b
a
matrix(a, 4, 16, byrow = T)
b <- matrix(a, 4, 16, byrow = T)
a
b
a +b
getwd()
a <- matrix(0, 10*100^2, 10)
b <- matrix(1, 10, 10)
system.time(a %x% b)
system.time(a %x% b)
system.time(a %x% b)
c <- a %x% b
dim(c)
dim(qq)
a <- matrix(0, 10*100^2, 10)
b <- matrix(1, 10, 10)
system.time(a %x% b)
system.time(a %*% b)
system.time(c <- a %*% b)
dim(c)
rm(list = ls())
gc()
a <- matrix(0, 10)
a
all.equal(a, 0)
all(a ==0)
class(a)
 p <- 10
q <- 100
a <- matrix(1, p, q)
system.time(diag(p) %x% a)
a
b
p
q
c <- matrix(0.0, p^2*q^2, 3*p)
dim(c)
print(object.size(c), units = "Mb")
d <- matrix(0.2, 1, p^2*q^2)
print(object.size, units = "Mb")
print(object.size(d), units = "Mb")
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(crossprod(t(d), c))
system.time(e <- crossprod(t(d), c))
print(object.size(e))
size(e)
size(d)
size(c)
a <- size(c)
class(a)
a[1]
d <- matrix(0.2, p*q, p^2*q^2)
d <- matrix(0.2, p*q, p^2*q^2)
memory.size
memory.size()
memory.limit()
memory.profile
memory.profile()
p <- 2
q <- 100
d <- matrix(0.2, p*q, p^2*q^2)
size(d)
dim(e)
size(e)
e
c
size(c)
dim(c)
c <- matrix(0.0, p^2*q^2, 3*p)
size(d)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
system.time(d %*% c)
a <- list(a = 3, b = 5)
b <- list(a = 4, b = 3)
a+b
mapply(FUN = crossprod, a, b)
a <- 1:10
a
list(a)
p
a <- 1:9
p <- 3
matrix(a, , 3)
list(matrix(a, , 3))
as.list(matrix(a, , 3))
combn(outcomes, 2, list )

combn(1:10, 2, list )


combn
 vector("list", count)
 vector("list", 1:10)
a <- matrix(1:10, 5, 2)
a
b <- list(a[, 1], a[, 2])
b


b1<-apply(a,2,list)
b1


b1<-lapply(a,2,list)

c(unname(as.data.frame(a)))
unname(as.data.frame(a))


lapply(b1,unlist) 


lapply(b1,unlist) 
a <- matrix(rnorm(1e5), 1e3)
system.time(c(unname(as.data.frame(a))))
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
system.time(replicate(c(unname(as.data.frame(a))), n = 1000))
gc()
gc()
system.time(replicate(c(unname(as.data.frame(a))), n = 1000))
system.time(replicate(c(unname(as.data.frame(a))), n = 1000))
apply(a,2,list) 
a <- matrix(1:10, 5, 2)
apply(a, 2, unlist)
apply(a, 2, list)
lapply(unlist, apply(a, 2, list))
lapply(a, function(x) apply(x, 2, list))
lapply(a, function(x) apply(x, 2, list))
lapply(a, function(x) apply(x, 2, list))
lapply(a, function(x) unlist(apply(x, 2, list)))
lapply(a, function(x) unlist(apply(x, 2, list)))
lapply(a, function(x) unlist(apply(x, 2, list)))
lapply(apply(a, 2, list), unlist)
system.time(replicate(c(unname(as.data.frame(a))), n = 1000))
a <- matrix(rnorm(1e5), 1e3)
a <- matrix(rnorm(1e6), 1e3)
gc()
system.time(replicate(c(unname(as.data.frame(a))), n = 1000))
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
g
gc()
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
system.time(replicate(lapply(apply(a, 2, list), unlist), n = 100))
system.time(replicate(lapply(apply(a, 2, list), unlist), n = 100))
gc()
a <- matrix(rnorm(1e6), 1e3)
system.time(replicate(lapply(apply(a, 2, list), unlist), n = 100))
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
gc()
system.time(replicate(c(unname(as.data.frame(a))), n = 200))
gc()
gc()
system.time(replicate(c(unname(as.data.frame(a))), n = 100))
gc()
ls()
size(a)
size(b)
size(b1)
size(c)
rm(list = ls())
gc()
rm(tmp)

ls()
gc()
gcinfo(verbose)
ls()
K.X
sourceDir
ls()
traceback()
sourceDir("utils")
sourceDir("utils", T)
sourceDir("utils", F)
sourceDir("utils", T, trace)
sourceDir("utils", T, trace = FALSE)
sourceDir("utils", T, trace = FALSE, try = TRUE)
ls()
ls()
source("examples/linear_setup.R")
ls()
source("models/linear/linear_gradhess.R")
n
delta.xi(x,  knots.list, splineArgs)
a <- delta.xi(x,  knots.list, splineArgs)
dim(a)
size(a)
Y %*% Sigma.inv
a = matrix(Y %*% Sigma.inv, 1)
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(a %x% diag(q))
q
system.time(a %x% diag(q))
n
source("models/linear/linear_gradhess.R")
a = matrix(Y %*% Sigma.inv, 1)
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(a %x% diag(q))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
system.time(K.X(n, q, a %x% diag(q), T))
q
system.time(diag(q))
K(3, 5) == t(K(5, 3))
system.time(K.X(n, q, t(a) %x% diag(q), T))
dim(a)
system.time(K.X(q, n, Y %*% Sigma.inv, F))
system.time(K.X(q, n, Y %*% Sigma.inv, F))
system.time(K.X(q, n, (Y %*% Sigma.inv) %x% diag(q), F))
system.time(K.X(q, n, (Y %*% Sigma.inv) %x% diag(q), F))
system.time(K.X(q, n, (Y %*% Sigma.inv) %x% diag(q), F))
Q
A
B
C
C
options
options(width = 150)
C
q
p
n
p = 10
q = 200
A <- matrix(1, p*q, n*q)
size(A)
dim(A)
object.size(A)
a = object.size(A)
a
a <- 100
a = object.size(A)
a<100
print(object.size(e), unit = "Kb")
print(object.size(A), unit = "Kb")
print(object.size(A), unit = "bt")
print(object.size(A), unit = "auto")
print(object.size(A), unit = "b")
print(object.size(A))
print(object.size(A), units = "auto")
a <- 1:1e8
print(object.size(a), units = "auto")
a <- 1:1e12
a <- 1:1e9
q()
